[{"name": "app.py", "content": "from collections import deque\nfrom shiny import reactive, render\nfrom shiny.express import ui, input\nimport random\nfrom datetime import datetime\nfrom faicons import icon_svg\nimport pandas as pd\nimport plotly.express as px\nfrom shinywidgets import render_plotly\nfrom scipy import stats\n\n# Constants\nDEQUE_SIZE: int = 60\nUPDATE_INTERVAL_SECS: int = 2  # Default interval for updates\n\n# Reactive value wrapper\nreactive_value_wrapper = reactive.value(deque(maxlen=DEQUE_SIZE))\n\n# Reactive calculation for combined data\n@reactive.calc()\ndef reactive_calc_combined():\n    # Invalidate every update interval\n    reactive.invalidate_later(UPDATE_INTERVAL_SECS)\n\n    # Random temperature generation between -21 and -16 degrees Celsius\n    temp = round(random.uniform(-21, -16), 1)\n    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    latest_dictionary_entry = {\"temp\": temp, \"timestamp\": timestamp}\n\n    # Append the new entry to the deque\n    reactive_value_wrapper.get().append(latest_dictionary_entry)\n\n    # Snapshot and dataframe creation\n    deque_snapshot = reactive_value_wrapper.get()\n    df = pd.DataFrame(deque_snapshot)\n    \n    return deque_snapshot, df, latest_dictionary_entry\n\n# Define UI\nui.page_opts(title=\"Penguin Air Temperature Live Tracker\", fillable=False)  # Updated app title\n\n# Sidebar UI\nwith ui.sidebar(open=\"open\"):\n    ui.input_dark_mode(mode=\"light\")  # Dark mode toggle\n    ui.h2(\"Explore the Penguins' Flight Data\", class_=\"text-center\")  # Updated sidebar title\n    ui.p(\n        \"Track the temperatures of the penguins soaring through the icy skies. Real-time data from our flight crew.\",\n        class_=\"text-left\",  # Updated description text\n    )\n    ui.hr()\n\n    # Correct penguin image section using the provided URL\n    ui.img(\n        src=\"https://media.istockphoto.com/id/147290529/photo/emperors.jpg?s=612x612&w=0&k=20&c=ZApZFJtKoXGKYYJsgNcNPTMHqqSbbAx9CBg2AF2qyJk=\",  # Penguin image source\n        alt=\"Emperor Penguins\",\n        class_=\"center-img\",  # CSS class for styling\n    )\n\n    # Updated text for tracking penguin temperature trends\n    ui.p(\n        ui.tags.i(class_=\"fas fa-thermometer-half\", style=\"font-size: 1.5em; color: red;\"),  # Thermometer icon\n        \" Track real-time penguin temperature variations and trends.\"\n    )\n\n    ui.hr()\n\n    # Slider for limiting the number of data points displayed\n    ui.input_slider(\"chart_limit\", \"Number of data points:\", min=1, max=60, value=15)\n\n    # Slider for controlling the update interval in seconds\n    ui.input_slider(\"update_interval\", \"Update Interval (seconds):\", min=1, max=30, value=2)\n\n    ui.hr()\n\n    # Update footer with GitHub and PyShiny links\n    ui.p(\n        ui.a(\n            ui.tags.i(class_=\"fa-brands fa-github\", style=\"font-size: 1.5em; color: black;\"),\n            \"GitHub Source\",\n            href=\"https://github.com/Elen-tesfai/cintel-05-cintel/blob/main/\",\n            target=\"_blank\",\n        ),\n        class_=\"text-left\"\n    )\n    ui.p(\n        ui.a(\n            ui.tags.i(class_=\"fa-brands fa-github\", style=\"font-size: 1.5em; color: black;\"),\n            \"GitHub App\",\n            href=\"https://github.com/Elen-tesfai/cintel-05-cintel/blob/main/dashboard/app.py\",\n            target=\"_blank\",\n        ),\n        class_=\"text-left\"\n    )\n    ui.p(\n        ui.a(\n            ui.tags.i(class_=\"fa-brands fa-github\", style=\"font-size: 1.5em; color: black;\"),\n            \"PyShiny\",\n            href=\"https://shiny.posit.co/py/\",\n            target=\"_blank\",\n        ),\n        class_=\"text-left\"\n    )\n\n# Main content layout\nwith ui.layout_columns():\n    # Value Box for current temperature\n    with ui.value_box(\n        showcase=icon_svg(\"thermometer\"),  # Thermometer icon\n        theme=\"bg-gradient-lightblue\",      # Light blue gradient background\n    ):\n        \"Current Temperature\"\n        \n        @render.text\n        def display_temp():\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n            return f\"{latest_dictionary_entry['temp']} \u00b0C\"\n        \n        \"Too cold for me!\"\n\n    # Value Box for current date and time\n    with ui.value_box(\n        showcase=icon_svg(\"clock\"),  # Clock icon\n        theme=\"bg-gradient-lightblue\",  # Light blue gradient background\n    ):\n        \"Current Date and Time\"\n        \n        @render.text\n        def display_time():\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n            return f\"{latest_dictionary_entry['timestamp']}\"\n\n# New row for displaying recent readings in a table\nwith ui.layout_columns():\n    with ui.card(height=\"250px\", theme=\"bg-lightblue\"):  # Light blue card background\n        ui.card_header(\"Most Recent Readings\")\n        \n        @render.data_frame\n        def display_df():\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n            pd.set_option('display.width', None)  # Use maximum width for the dataframe\n            return render.DataGrid(df, width=\"100%\")\n\n# New row for displaying chart and trend\nwith ui.layout_columns():\n    with ui.card(height=\"600px\", theme=\"bg-lightblue\"):  # Light blue card background\n        ui.card_header(\"Chart and Current Trend\")\n        \n        @render_plotly\n        def display_plot():\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n\n            if not df.empty:\n                df_limited = df.tail(input.chart_limit())  # Limit the number of data points to display based on input\n                df_limited[\"timestamp\"] = pd.to_datetime(df_limited[\"timestamp\"])\n\n                # Scatter plot for temperature readings over time\n                fig = px.scatter(df_limited,\n                                 x=\"timestamp\",\n                                 y=\"temp\",\n                                 title=\"Temperature Readings with Regression Line\",\n                                 labels={\"temp\": \"Temperature (\u00b0C)\", \"timestamp\": \"Time (local)\"},\n                                 color_discrete_sequence=[\"#007bff\"])  # Blue color for the scatter points\n\n                # Set y-axis range\n                fig.update_yaxes(range=[-22, 0])\n\n                # Regression line calculation\n                sequence = range(len(df_limited))\n                x_vals = list(sequence)\n                y_vals = df_limited[\"temp\"]\n\n                slope, intercept, r_value, p_value, std_err = stats.linregress(x_vals, y_vals)\n                df_limited['best_fit_line'] = [slope * x + intercept for x in x_vals]\n\n                # Add regression line to the plot\n                fig.add_scatter(x=df_limited[\"timestamp\"], y=df_limited['best_fit_line'], mode='lines', name='Regression Line')\n\n                # Update layout for the plot\n                fig.update_layout(\n                    xaxis_title=\"Time (local)\", \n                    yaxis_title=\"Temperature (\u00b0C)\"\n                )\n\n            return fig", "type": "text"}, {"name": "temp_plot.png", "content": "", "type": "binary"}]